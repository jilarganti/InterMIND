// @ts-nocheck
// api/image-service.js
import fetch from "node-fetch"

// API-–∫–ª—é—á –¥–ª—è Google Custom Search
const GOOGLE_API_KEY = process.env.GOOGLE_API_KEY
const SEARCH_ENGINE_ID = process.env.SEARCH_ENGINE_ID

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 * @param {string} query - –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
 * @param {number} [limit=1] - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 * @returns {Promise<Array<{url: string, title: string}>>} –ú–∞—Å—Å–∏–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
export async function searchImages(query, limit = 1) {
  console.log(`üü¢ IMAGE-SERVICE: –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}" (–ª–∏–º–∏—Ç: ${limit})`)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–π
  if (!GOOGLE_API_KEY) {
    console.error("üî¥ IMAGE-SERVICE: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç GOOGLE_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    return []
  }

  if (!SEARCH_ENGINE_ID) {
    console.error("üî¥ IMAGE-SERVICE: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç SEARCH_ENGINE_ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    return []
  }

  console.log(`üü¢ IMAGE-SERVICE: –ö–ª—é—á–∏ API –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`)

  try {
    const url = `https://www.googleapis.com/customsearch/v1?key=${GOOGLE_API_KEY}&cx=${SEARCH_ENGINE_ID}&q=${encodeURIComponent(query)}&searchType=image&num=${limit}&safe=active&imgType=photo&imgSize=large`
    console.log(`üü¢ IMAGE-SERVICE: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Google CSE API: ${url.substring(0, url.indexOf("key=") + 5)}...HIDDEN...`)

    const startTime = Date.now()
    const response = await fetch(url)
    const responseTime = Date.now() - startTime

    console.log(`üü¢ IMAGE-SERVICE: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Google CSE API, —Å—Ç–∞—Ç—É—Å: ${response.status}, –≤—Ä–µ–º—è: ${responseTime}ms`)

    if (!response.ok) {
      const errorBody = await response.text()
      console.error(`üî¥ IMAGE-SERVICE: –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ Google CSE API: ${response.status} ${response.statusText}`)
      console.error(`üî¥ IMAGE-SERVICE: –¢–µ–ª–æ –æ—à–∏–±–∫–∏: ${errorBody.substring(0, 500)}...`)
      return []
    }

    const data = await response.json()
    console.log(`üü¢ IMAGE-SERVICE: –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –æ—Ç API`)

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    if (!data) {
      console.error("üî¥ IMAGE-SERVICE: –ü–æ–ª—É—á–µ–Ω—ã –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç API")
      return []
    }

    if (typeof data !== "object") {
      console.error(`üî¥ IMAGE-SERVICE: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç API: ${typeof data}`)
      return []
    }

    // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log(`üü¢ IMAGE-SERVICE: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ API:`)
    console.log(`  - –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è: ${Object.keys(data).join(", ")}`)

    if (!("items" in data)) {
      console.warn(`üü° IMAGE-SERVICE: –í –æ—Ç–≤–µ—Ç–µ API –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á 'items'`)
      // –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log(`üü¢ IMAGE-SERVICE: –ù–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞ API: ${JSON.stringify(data).substring(0, 500)}...`)
      return []
    }

    if (!Array.isArray(data.items)) {
      console.error(`üî¥ IMAGE-SERVICE: –ü–æ–ª–µ 'items' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º: ${typeof data.items}`)
      return []
    }

    console.log(`üü¢ IMAGE-SERVICE: –ù–∞–π–¥–µ–Ω–æ ${data.items.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`)

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const results = data.items.map((item) => {
      if (!item.link) {
        console.warn(`üü° IMAGE-SERVICE: –£ —ç–ª–µ–º–µ–Ω—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç URL (link)`)
      }
      return {
        url: item.link || "",
        title: item.title || "",
      }
    })

    console.log(`üü¢ IMAGE-SERVICE: –í–æ–∑–≤—Ä–∞—â–∞–µ–º ${results.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:`)
    // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    results.slice(0, 2).forEach((item, index) => {
      console.log(`  - #${index + 1}: ${item.title.substring(0, 30)}... | URL: ${item.url.substring(0, 50)}...`)
    })

    return results
  } catch (error) {
    console.error(`üî¥ IMAGE-SERVICE: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:`, error)

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫
    if (error.code === "ENOTFOUND" || error.code === "ETIMEDOUT") {
      console.error(`üî¥ IMAGE-SERVICE: –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: ${error.code}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º.`)
    }

    if (error.response) {
      console.error(`üî¥ IMAGE-SERVICE: –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${error.response.status}`)
      console.error(`üî¥ IMAGE-SERVICE: –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:`, error.response.headers)
    }

    return []
  }
}
