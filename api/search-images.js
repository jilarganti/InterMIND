// api/search-images.js
import { searchImages } from "./AIChat/image-service.js"

// @ts-ignore
export async function GET(req) {
  console.log("üîµ SEARCH-API: –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—Ä–æ—Å–∞
  const url = new URL(req.url)
  const query = url.searchParams.get("q")

  if (!query) {
    console.error("üî¥ SEARCH-API: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—Ä–æ—Å–∞ 'q'")
    return new Response(JSON.stringify({ error: "Missing query parameter" }), {
      status: 400,
      headers: { "Content-Type": "application/json" },
    })
  }

  console.log(`üîµ SEARCH-API: –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}"`)

  try {
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const images = await searchImages(query, 1)
    console.log(`üîµ SEARCH-API: –ù–∞–π–¥–µ–Ω–æ ${images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`)

    return new Response(JSON.stringify({ images }), {
      status: 200,
      headers: { "Content-Type": "application/json" },
    })
  } catch (error) {
    console.error("üî¥ SEARCH-API: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:", error)
    return new Response(
      JSON.stringify({
        error: "Error searching for images",
        details: String(error),
      }),
      {
        status: 500,
        headers: { "Content-Type": "application/json" },
      },
    )
  }
}
