// .vitepress/theme/utils/chatUtils.ts
import type { UIMessage } from "@ai-sdk/ui-utils"

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö
 */
function escapeRegExp(string: string): string {
  return string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&")
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Ä–∫–µ—Ä–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–µ
 * —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
 */
export async function processImagesInMessage(message: UIMessage): Promise<UIMessage> {
  if (!message || message.role !== "assistant") return message

  console.log("üü¢ CLIENT: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏...")

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–∞—Ä–∫–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–µ
  const imageRegex = /\[NEEDS_IMAGE:([^\]]+)\]/g
  if (!imageRegex.test(message.content)) {
    console.log("üü¢ CLIENT: –ú–∞—Ä–∫–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    return message
  }

  console.log("üü¢ CLIENT: –ù–∞–π–¥–µ–Ω—ã –º–∞—Ä–∫–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –Ω–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É")

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º regex –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
  imageRegex.lastIndex = 0

  let processedContent = message.content
  let matchPromises = []

  // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –º–∞—Ä–∫–µ—Ä—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Ö
  let match
  while ((match = imageRegex.exec(message.content)) !== null) {
    const fullMatch = match[0]
    const query = match[1]

    console.log(`üü¢ CLIENT: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–∞—Ä–∫–µ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}"`)

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–∏—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞—Ä–∫–µ—Ä–∞
    const searchPromise = fetch(`/api/search-images?q=${encodeURIComponent(query)}`)
      .then((response) => response.json())
      .then((data) => {
        console.log(`üü¢ CLIENT: –ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–ª—è "${query}":`, data)

        if (data.images && data.images.length > 0) {
          const image = data.images[0]
          const imageUrl = image.url
          const title = image.title || query

          console.log(`üü¢ CLIENT: –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${imageUrl}`)

          const imageHtml = `<figure class="image-container" style="margin:16px;">
                            <img class="chat-interactive-image" src="${imageUrl}" data-query="${query}" data-title="${title}" style="max-width:100%">
                            <figcaption style="font-size:0.8em;color:#666;margin-top:4px">–ò—Å—Ç–æ—á–Ω–∏–∫: <a href="${imageUrl}" target="_blank">üìç${title}</a></figcaption>
                        </figure>`

          processedContent = processedContent.replace(new RegExp(escapeRegExp(fullMatch), "g"), imageHtml)
        } else {
          console.log(`üü¢ CLIENT: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è "${query}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`)
          processedContent = processedContent.replace(new RegExp(escapeRegExp(fullMatch), "g"), `[–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è "${query}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ]`)
        }
      })
      .catch((err) => {
        console.error(`üî¥ CLIENT: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è "${query}":`, err)
        processedContent = processedContent.replace(new RegExp(escapeRegExp(fullMatch), "g"), `[–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è "${query}"]`)
      })

    matchPromises.push(searchPromise)
  }

  // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  if (matchPromises.length > 0) {
    console.log(`üü¢ CLIENT: –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è ${matchPromises.length} –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...`)
    await Promise.all(matchPromises)
    console.log("üü¢ CLIENT: –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω—ã")

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    return {
      ...message,
      content: processedContent,
    }
  }

  return message
}
