// scripts/ai/translate.ts
import { FileSystemManager } from "./filesystem.js"
import { TaskManager } from "./taskManager.js"
import { config } from "./config.js"

async function main(): Promise<void> {
  console.log("üåç –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤ InterMind")
  console.log(
    `üìã –Ø–∑—ã–∫–∏: ${Object.values(config.languages)
      .filter((l) => l.enabled)
      .map((l) => l.name)
      .join(", ")}`,
  )
  console.log(`ü§ñ –ú–æ–¥–µ–ª–∏: ${Object.keys(config.models).join(", ")}`)
  console.log(`‚ö° –ü–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º: ${config.processing.maxConcurrency}`)
  console.log("")

  const fileSystem = new FileSystemManager()
  const taskManager = new TaskManager()

  try {
    // –≠—Ç–∞–ø 1: –û—á–∏—Å—Ç–∫–∞
    console.log("üßπ –≠—Ç–∞–ø 1: –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤")
    const cleanupResult = await fileSystem.cleanupTranslations()
    console.log("")

    // –≠—Ç–∞–ø 2: –û—Ü–µ–Ω–∫–∞
    console.log("üîç –≠—Ç–∞–ø 2: –û—Ü–µ–Ω–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞")
    const assessments = await fileSystem.assessFiles()
    const tasks = await taskManager.createTasksFromAssessments(assessments)

    if (tasks.length === 0) {
      console.log("‚ú® –í—Å–µ —Ñ–∞–π–ª—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã!")
      return
    }
    console.log("")

    // –≠—Ç–∞–ø 3: –ü–µ—Ä–µ–≤–æ–¥ –∫–æ–Ω—Ñ–∏–≥–æ–≤ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ)
    console.log("üìù –≠—Ç–∞–ø 3: –ü–µ—Ä–µ–≤–æ–¥ –∫–æ–Ω—Ñ–∏–≥–æ–≤ VitePress")
    await taskManager.processConfigTranslation()
    console.log("")

    // –≠—Ç–∞–ø 4: –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Ñ–∞–π–ª–æ–≤
    console.log("üöÄ –≠—Ç–∞–ø 4: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Ñ–∞–π–ª–æ–≤")
    const results = await taskManager.processTasksConcurrently(tasks)
    console.log("")

    // –≠—Ç–∞–ø 5: –û—Ç—á–µ—Ç
    console.log("üìä –≠—Ç–∞–ø 5: –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç")
    taskManager.printSummary(results)

    const successRate = (results.filter((r) => r.success).length / results.length) * 100

    if (successRate === 100) {
      console.log("\nüéâ –í—Å–µ –ø–µ—Ä–µ–≤–æ–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    } else if (successRate >= 80) {
      console.log(`\n‚úÖ –ü–µ—Ä–µ–≤–æ–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —Å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å—é ${successRate.toFixed(1)}%`)
    } else {
      console.log(`\n‚ö†Ô∏è –ü–µ—Ä–µ–≤–æ–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —Å –Ω–∏–∑–∫–æ–π —É—Å–ø–µ—à–Ω–æ—Å—Ç—å—é ${successRate.toFixed(1)}%`)
      console.log("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥-—Ñ–∞–π–ª—ã –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
    }
  } catch (error) {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫
main().catch((error) => {
  console.error("‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:", error)
  process.exit(1)
})
