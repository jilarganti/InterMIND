import { createContactAndLead } from "./lib/pipedriveLib.js"
import { Channel } from "./config/pipedriveConfig.js"
import { LeadData, DataLayerEvent, SignUpLead } from "./types/pipedriveFields.js"
import { withDomainCheck } from "./lib/domainMiddleware.js"

export async function POST(request: Request) {
  return withDomainCheck(request, async (request) => {
    const data = (await request.json()) as SignUpLead

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ LeadData –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ API
    const leadData: LeadData = {
      lead: {
        title: "sign_up",
        kind: data.name,
        params: "üí≥" + data.params.plan + " üì©" + data.params.method,
        utm: data.utm,
        sourceChannel: Channel.WEB_VISITORS, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–Ω–∞–ª "Web visitors" –¥–ª—è sign-up
      },
      contact: {
        name: data.name,
        email: data.email,
      },
    }

    // –í—ã–∑—ã–≤–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é
    const result = await createContactAndLead(leadData, request)

    // –î–æ–±–∞–≤–ª—è–µ–º GTM –¥–∞–Ω–Ω—ã–µ –∫ –æ—Ç–≤–µ—Ç—É
    if (result.success) {
      const gtmData: DataLayerEvent = {
        event: "sign_up",
        method: data.params.method,
        plan: data.params.plan,
        kind: data.name, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –∫–∞–∫ –≤–∏–¥ –ª–∏–¥–∞
      }
      ;(result as any).gtmData = gtmData
    }

    return new Response(JSON.stringify(result), {
      status: result.success ? 200 : 500,
      headers: { "Content-Type": "application/json" },
    })
  })
}
