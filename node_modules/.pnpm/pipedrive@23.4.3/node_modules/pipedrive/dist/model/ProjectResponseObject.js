"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _FullProjectObject = _interopRequireDefault(require("./FullProjectObject"));
var _ProjectId = _interopRequireDefault(require("./ProjectId"));
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The ProjectResponseObject model module.
 * @module model/ProjectResponseObject
 * @version 1.0.0
 */
var ProjectResponseObject = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ProjectResponseObject</code>.
   * @alias module:model/ProjectResponseObject
   * @implements module:model/ProjectId
   * @implements module:model/FullProjectObject
   */
  function ProjectResponseObject() {
    (0, _classCallCheck2["default"])(this, ProjectResponseObject);
    _ProjectId["default"].initialize(this);
    _FullProjectObject["default"].initialize(this);
    ProjectResponseObject.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  (0, _createClass2["default"])(ProjectResponseObject, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>ProjectResponseObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectResponseObject} obj Optional instance to populate.
     * @return {module:model/ProjectResponseObject} The populated <code>ProjectResponseObject</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ProjectResponseObject();
        _ProjectId["default"].constructFromObject(data, obj);
        _FullProjectObject["default"].constructFromObject(data, obj);
        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
          delete data['id'];
        }
        if (data.hasOwnProperty('title')) {
          obj['title'] = _ApiClient["default"].convertToType(data['title'], 'String');
          delete data['title'];
        }
        if (data.hasOwnProperty('board_id')) {
          obj['board_id'] = _ApiClient["default"].convertToType(data['board_id'], 'Number');
          delete data['board_id'];
        }
        if (data.hasOwnProperty('phase_id')) {
          obj['phase_id'] = _ApiClient["default"].convertToType(data['phase_id'], 'Number');
          delete data['phase_id'];
        }
        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
          delete data['description'];
        }
        if (data.hasOwnProperty('status')) {
          obj['status'] = _ApiClient["default"].convertToType(data['status'], 'String');
          delete data['status'];
        }
        if (data.hasOwnProperty('owner_id')) {
          obj['owner_id'] = _ApiClient["default"].convertToType(data['owner_id'], 'Number');
          delete data['owner_id'];
        }
        if (data.hasOwnProperty('start_date')) {
          obj['start_date'] = _ApiClient["default"].convertToType(data['start_date'], 'Date');
          delete data['start_date'];
        }
        if (data.hasOwnProperty('end_date')) {
          obj['end_date'] = _ApiClient["default"].convertToType(data['end_date'], 'Date');
          delete data['end_date'];
        }
        if (data.hasOwnProperty('deal_ids')) {
          obj['deal_ids'] = _ApiClient["default"].convertToType(data['deal_ids'], ['Number']);
          delete data['deal_ids'];
        }
        if (data.hasOwnProperty('org_id')) {
          obj['org_id'] = _ApiClient["default"].convertToType(data['org_id'], 'Number');
          delete data['org_id'];
        }
        if (data.hasOwnProperty('person_id')) {
          obj['person_id'] = _ApiClient["default"].convertToType(data['person_id'], 'Number');
          delete data['person_id'];
        }
        if (data.hasOwnProperty('labels')) {
          obj['labels'] = _ApiClient["default"].convertToType(data['labels'], ['Number']);
          delete data['labels'];
        }
        if (data.hasOwnProperty('add_time')) {
          obj['add_time'] = _ApiClient["default"].convertToType(data['add_time'], 'String');
          delete data['add_time'];
        }
        if (data.hasOwnProperty('update_time')) {
          obj['update_time'] = _ApiClient["default"].convertToType(data['update_time'], 'String');
          delete data['update_time'];
        }
        if (data.hasOwnProperty('status_change_time')) {
          obj['status_change_time'] = _ApiClient["default"].convertToType(data['status_change_time'], 'String');
          delete data['status_change_time'];
        }
        if (data.hasOwnProperty('archive_time')) {
          obj['archive_time'] = _ApiClient["default"].convertToType(data['archive_time'], 'String');
          delete data['archive_time'];
        }
        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }
      return obj;
    }
  }]);
  return ProjectResponseObject;
}();
/**
 * The ID of the project, generated when the task was created
 * @member {Number} id
 */
ProjectResponseObject.prototype['id'] = undefined;

/**
 * The title of the project
 * @member {String} title
 */
ProjectResponseObject.prototype['title'] = undefined;

/**
 * The ID of the board this project is associated with
 * @member {Number} board_id
 */
ProjectResponseObject.prototype['board_id'] = undefined;

/**
 * The ID of the phase this project is associated with
 * @member {Number} phase_id
 */
ProjectResponseObject.prototype['phase_id'] = undefined;

/**
 * The description of the project
 * @member {String} description
 */
ProjectResponseObject.prototype['description'] = undefined;

/**
 * The status of the project
 * @member {String} status
 */
ProjectResponseObject.prototype['status'] = undefined;

/**
 * The ID of a project owner
 * @member {Number} owner_id
 */
ProjectResponseObject.prototype['owner_id'] = undefined;

/**
 * The start date of the project. Format: YYYY-MM-DD.
 * @member {Date} start_date
 */
ProjectResponseObject.prototype['start_date'] = undefined;

/**
 * The end date of the project. Format: YYYY-MM-DD.
 * @member {Date} end_date
 */
ProjectResponseObject.prototype['end_date'] = undefined;

/**
 * An array of IDs of the deals this project is associated with
 * @member {Array.<Number>} deal_ids
 */
ProjectResponseObject.prototype['deal_ids'] = undefined;

/**
 * The ID of the organization this project is associated with
 * @member {Number} org_id
 */
ProjectResponseObject.prototype['org_id'] = undefined;

/**
 * The ID of the person this project is associated with
 * @member {Number} person_id
 */
ProjectResponseObject.prototype['person_id'] = undefined;

/**
 * An array of IDs of the labels this project has
 * @member {Array.<Number>} labels
 */
ProjectResponseObject.prototype['labels'] = undefined;

/**
 * The creation date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} add_time
 */
ProjectResponseObject.prototype['add_time'] = undefined;

/**
 * The update date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} update_time
 */
ProjectResponseObject.prototype['update_time'] = undefined;

/**
 * The status changed date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} status_change_time
 */
ProjectResponseObject.prototype['status_change_time'] = undefined;

/**
 * The archived date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS. If not archived then 'null'.
 * @member {String} archive_time
 */
ProjectResponseObject.prototype['archive_time'] = undefined;

// Implement ProjectId interface:
/**
 * The ID of the project, generated when the task was created
 * @member {Number} id
 */
_ProjectId["default"].prototype['id'] = undefined;
// Implement FullProjectObject interface:
/**
 * The title of the project
 * @member {String} title
 */
_FullProjectObject["default"].prototype['title'] = undefined;
/**
 * The ID of the board this project is associated with
 * @member {Number} board_id
 */
_FullProjectObject["default"].prototype['board_id'] = undefined;
/**
 * The ID of the phase this project is associated with
 * @member {Number} phase_id
 */
_FullProjectObject["default"].prototype['phase_id'] = undefined;
/**
 * The description of the project
 * @member {String} description
 */
_FullProjectObject["default"].prototype['description'] = undefined;
/**
 * The status of the project
 * @member {String} status
 */
_FullProjectObject["default"].prototype['status'] = undefined;
/**
 * The ID of a project owner
 * @member {Number} owner_id
 */
_FullProjectObject["default"].prototype['owner_id'] = undefined;
/**
 * The start date of the project. Format: YYYY-MM-DD.
 * @member {Date} start_date
 */
_FullProjectObject["default"].prototype['start_date'] = undefined;
/**
 * The end date of the project. Format: YYYY-MM-DD.
 * @member {Date} end_date
 */
_FullProjectObject["default"].prototype['end_date'] = undefined;
/**
 * An array of IDs of the deals this project is associated with
 * @member {Array.<Number>} deal_ids
 */
_FullProjectObject["default"].prototype['deal_ids'] = undefined;
/**
 * The ID of the organization this project is associated with
 * @member {Number} org_id
 */
_FullProjectObject["default"].prototype['org_id'] = undefined;
/**
 * The ID of the person this project is associated with
 * @member {Number} person_id
 */
_FullProjectObject["default"].prototype['person_id'] = undefined;
/**
 * An array of IDs of the labels this project has
 * @member {Array.<Number>} labels
 */
_FullProjectObject["default"].prototype['labels'] = undefined;
/**
 * The creation date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} add_time
 */
_FullProjectObject["default"].prototype['add_time'] = undefined;
/**
 * The update date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} update_time
 */
_FullProjectObject["default"].prototype['update_time'] = undefined;
/**
 * The status changed date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} status_change_time
 */
_FullProjectObject["default"].prototype['status_change_time'] = undefined;
/**
 * The archived date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS. If not archived then 'null'.
 * @member {String} archive_time
 */
_FullProjectObject["default"].prototype['archive_time'] = undefined;
var _default = ProjectResponseObject;
exports["default"] = _default;