"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The ProjectPhaseObject model module.
 * @module model/ProjectPhaseObject
 * @version 1.0.0
 */
var ProjectPhaseObject = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ProjectPhaseObject</code>.
   * @alias module:model/ProjectPhaseObject
   */
  function ProjectPhaseObject() {
    (0, _classCallCheck2["default"])(this, ProjectPhaseObject);
    ProjectPhaseObject.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  (0, _createClass2["default"])(ProjectPhaseObject, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>ProjectPhaseObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectPhaseObject} obj Optional instance to populate.
     * @return {module:model/ProjectPhaseObject} The populated <code>ProjectPhaseObject</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ProjectPhaseObject();
        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
          delete data['id'];
        }
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
          delete data['name'];
        }
        if (data.hasOwnProperty('board_id')) {
          obj['board_id'] = _ApiClient["default"].convertToType(data['board_id'], 'Number');
          delete data['board_id'];
        }
        if (data.hasOwnProperty('order_nr')) {
          obj['order_nr'] = _ApiClient["default"].convertToType(data['order_nr'], 'Number');
          delete data['order_nr'];
        }
        if (data.hasOwnProperty('add_time')) {
          obj['add_time'] = _ApiClient["default"].convertToType(data['add_time'], 'String');
          delete data['add_time'];
        }
        if (data.hasOwnProperty('update_time')) {
          obj['update_time'] = _ApiClient["default"].convertToType(data['update_time'], 'String');
          delete data['update_time'];
        }
        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }
      return obj;
    }
  }]);
  return ProjectPhaseObject;
}();
/**
 * The ID of the project phase
 * @member {Number} id
 */
ProjectPhaseObject.prototype['id'] = undefined;

/**
 * Name of a project phase
 * @member {String} name
 */
ProjectPhaseObject.prototype['name'] = undefined;

/**
 * The ID of the project board this phase is linked to
 * @member {Number} board_id
 */
ProjectPhaseObject.prototype['board_id'] = undefined;

/**
 * The order of a phase
 * @member {Number} order_nr
 */
ProjectPhaseObject.prototype['order_nr'] = undefined;

/**
 * The creation date and time of the board in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} add_time
 */
ProjectPhaseObject.prototype['add_time'] = undefined;

/**
 * The update date and time of the board in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} update_time
 */
ProjectPhaseObject.prototype['update_time'] = undefined;
var _default = ProjectPhaseObject;
exports["default"] = _default;