"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _GetFieldAllOf = _interopRequireDefault(require("./GetFieldAllOf"));
var _InternalFieldType = _interopRequireDefault(require("./InternalFieldType"));
var _NoteField = _interopRequireDefault(require("./NoteField"));
var _NoteFieldOptions = _interopRequireDefault(require("./NoteFieldOptions"));
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The GetNoteField model module.
 * @module model/GetNoteField
 * @version 1.0.0
 */
var GetNoteField = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GetNoteField</code>.
   * @alias module:model/GetNoteField
   * @implements module:model/NoteField
   * @implements module:model/GetFieldAllOf
   */
  function GetNoteField() {
    (0, _classCallCheck2["default"])(this, GetNoteField);
    _NoteField["default"].initialize(this);
    _GetFieldAllOf["default"].initialize(this);
    GetNoteField.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  (0, _createClass2["default"])(GetNoteField, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>GetNoteField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNoteField} obj Optional instance to populate.
     * @return {module:model/GetNoteField} The populated <code>GetNoteField</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GetNoteField();
        _NoteField["default"].constructFromObject(data, obj);
        _GetFieldAllOf["default"].constructFromObject(data, obj);
        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
          delete data['id'];
        }
        if (data.hasOwnProperty('key')) {
          obj['key'] = _ApiClient["default"].convertToType(data['key'], 'String');
          delete data['key'];
        }
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
          delete data['name'];
        }
        if (data.hasOwnProperty('field_type')) {
          obj['field_type'] = _InternalFieldType["default"].constructFromObject(data['field_type']);
          delete data['field_type'];
        }
        if (data.hasOwnProperty('active_flag')) {
          obj['active_flag'] = _ApiClient["default"].convertToType(data['active_flag'], 'Boolean');
          delete data['active_flag'];
        }
        if (data.hasOwnProperty('edit_flag')) {
          obj['edit_flag'] = _ApiClient["default"].convertToType(data['edit_flag'], 'Boolean');
          delete data['edit_flag'];
        }
        if (data.hasOwnProperty('bulk_edit_allowed')) {
          obj['bulk_edit_allowed'] = _ApiClient["default"].convertToType(data['bulk_edit_allowed'], 'Boolean');
          delete data['bulk_edit_allowed'];
        }
        if (data.hasOwnProperty('mandatory_flag')) {
          obj['mandatory_flag'] = _ApiClient["default"].convertToType(data['mandatory_flag'], 'Boolean');
          delete data['mandatory_flag'];
        }
        if (data.hasOwnProperty('options')) {
          obj['options'] = _ApiClient["default"].convertToType(data['options'], [_NoteFieldOptions["default"]]);
          delete data['options'];
        }
        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }
      return obj;
    }
  }]);
  return GetNoteField;
}();
/**
 * The ID of the field
 * @member {Number} id
 */
GetNoteField.prototype['id'] = undefined;

/**
 * The key of the field
 * @member {String} key
 */
GetNoteField.prototype['key'] = undefined;

/**
 * The name of the field
 * @member {String} name
 */
GetNoteField.prototype['name'] = undefined;

/**
 * @member {module:model/InternalFieldType} field_type
 */
GetNoteField.prototype['field_type'] = undefined;

/**
 * The active flag of the field
 * @member {Boolean} active_flag
 */
GetNoteField.prototype['active_flag'] = undefined;

/**
 * The edit flag of the field
 * @member {Boolean} edit_flag
 */
GetNoteField.prototype['edit_flag'] = undefined;

/**
 * Not used
 * @member {Boolean} bulk_edit_allowed
 */
GetNoteField.prototype['bulk_edit_allowed'] = undefined;

/**
 * Whether or not the field is mandatory
 * @member {Boolean} mandatory_flag
 */
GetNoteField.prototype['mandatory_flag'] = undefined;

/**
 * The options of the field. When there are no options, `null` is returned.
 * @member {Array.<module:model/NoteFieldOptions>} options
 */
GetNoteField.prototype['options'] = undefined;

// Implement NoteField interface:
/**
 * The ID of the field
 * @member {Number} id
 */
_NoteField["default"].prototype['id'] = undefined;
/**
 * The key of the field
 * @member {String} key
 */
_NoteField["default"].prototype['key'] = undefined;
/**
 * The name of the field
 * @member {String} name
 */
_NoteField["default"].prototype['name'] = undefined;
/**
 * @member {module:model/FieldTypeAsString} field_type
 */
_NoteField["default"].prototype['field_type'] = undefined;
/**
 * The active flag of the field
 * @member {Boolean} active_flag
 */
_NoteField["default"].prototype['active_flag'] = undefined;
/**
 * The edit flag of the field
 * @member {Boolean} edit_flag
 */
_NoteField["default"].prototype['edit_flag'] = undefined;
/**
 * Not used
 * @member {Boolean} bulk_edit_allowed
 */
_NoteField["default"].prototype['bulk_edit_allowed'] = undefined;
/**
 * Whether or not the field is mandatory
 * @member {Boolean} mandatory_flag
 */
_NoteField["default"].prototype['mandatory_flag'] = undefined;
/**
 * The options of the field. When there are no options, `null` is returned.
 * @member {Array.<module:model/NoteFieldOptions>} options
 */
_NoteField["default"].prototype['options'] = undefined;
// Implement GetFieldAllOf interface:
/**
 * @member {module:model/InternalFieldType} field_type
 */
_GetFieldAllOf["default"].prototype['field_type'] = undefined;
var _default = GetNoteField;
exports["default"] = _default;