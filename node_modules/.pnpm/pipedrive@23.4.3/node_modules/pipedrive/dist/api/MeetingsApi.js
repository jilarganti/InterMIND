"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _UserProviderLinkCreateRequest = _interopRequireDefault(require("../model/UserProviderLinkCreateRequest"));
var _UserProviderLinkErrorResponse = _interopRequireDefault(require("../model/UserProviderLinkErrorResponse"));
var _UserProviderLinkSuccessResponse = _interopRequireDefault(require("../model/UserProviderLinkSuccessResponse"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } /**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
* Meetings service.
* @module api/MeetingsApi
* @version 1.0.0
*/
var MeetingsApi = /*#__PURE__*/function () {
  /**
  * Constructs a new MeetingsApi. 
  * @alias module:api/MeetingsApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function MeetingsApi(apiClient) {
    (0, _classCallCheck2["default"])(this, MeetingsApi);
    this.apiClient = apiClient;
  }

  /**
   * Delete the link between a user and the installed video call integration
   * A video calling provider must call this endpoint to remove the link between a user and the installed video calling app.
   * @param {String} id Unique identifier linking a user to the installed integration
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/UserProviderLinkSuccessResponse} and HTTP response
   */
  (0, _createClass2["default"])(MeetingsApi, [{
    key: "deleteUserProviderLinkWithHttpInfo",
    value: function deleteUserProviderLinkWithHttpInfo(id) {
      var opts = {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteUserProviderLink");
      }
      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var formParamArray = [];
      var contentTypes = [];
      var isURLEncoded = contentTypes.includes('application/x-www-form-urlencoded');
      var isJSON = contentTypes.includes('application/json');
      if (isJSON) {
        postBody = _objectSpread(_objectSpread({}, postBody), opts);
      } else if (isURLEncoded) {
        for (var key in opts) {
          if (opts.hasOwnProperty(key) && !formParamArray.includes(key)) {
            formParams[key] = opts[key];
          }
        }
      }
      var authNames = ['api_key', 'oauth2'];
      var accepts = ['application/json'];
      var returnType = _UserProviderLinkSuccessResponse["default"];
      return this.apiClient.callApi('/meetings/userProviderLinks/{id}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Delete the link between a user and the installed video call integration
     * A video calling provider must call this endpoint to remove the link between a user and the installed video calling app.
     * @param {String} id Unique identifier linking a user to the installed integration
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserProviderLinkSuccessResponse}
     */
  }, {
    key: "deleteUserProviderLink",
    value: function deleteUserProviderLink(id) {
      return this.deleteUserProviderLinkWithHttpInfo(id).then(function (response_and_data) {
        return response_and_data;
      });
    }

    /**
     * Link a user with the installed video call integration
     * A video calling provider must call this endpoint after a user has installed the video calling app so that the new user's information is sent.
     * @param {Object} opts Optional parameters
     * @param {module:model/UserProviderLinkCreateRequest} opts.userProviderLinkCreateRequest 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/UserProviderLinkSuccessResponse} and HTTP response
     */
  }, {
    key: "saveUserProviderLinkWithHttpInfo",
    value: function saveUserProviderLinkWithHttpInfo(opts) {
      opts = opts || {};
      var postBody = opts['userProviderLinkCreateRequest'];
      if (opts['user_provider_id'] === undefined || opts['user_provider_id'] === null) {
        throw new Error("Missing the required parameter 'user_provider_id' when calling saveUserProviderLink");
      }
      if (opts['user_id'] === undefined || opts['user_id'] === null) {
        throw new Error("Missing the required parameter 'user_id' when calling saveUserProviderLink");
      }
      if (opts['company_id'] === undefined || opts['company_id'] === null) {
        throw new Error("Missing the required parameter 'company_id' when calling saveUserProviderLink");
      }
      if (opts['marketplace_client_id'] === undefined || opts['marketplace_client_id'] === null) {
        throw new Error("Missing the required parameter 'marketplace_client_id' when calling saveUserProviderLink");
      }
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var formParamArray = [];
      var contentTypes = ['application/json'];
      var isURLEncoded = contentTypes.includes('application/x-www-form-urlencoded');
      var isJSON = contentTypes.includes('application/json');
      if (isJSON) {
        postBody = _objectSpread(_objectSpread({}, postBody), opts);
      } else if (isURLEncoded) {
        for (var key in opts) {
          if (opts.hasOwnProperty(key) && !formParamArray.includes(key)) {
            formParams[key] = opts[key];
          }
        }
      }
      var authNames = ['api_key', 'oauth2'];
      var accepts = ['application/json'];
      var returnType = _UserProviderLinkSuccessResponse["default"];
      return this.apiClient.callApi('/meetings/userProviderLinks', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Link a user with the installed video call integration
     * A video calling provider must call this endpoint after a user has installed the video calling app so that the new user's information is sent.
     * @param {Object} opts Optional parameters
     * @param {module:model/UserProviderLinkCreateRequest} opts.userProviderLinkCreateRequest 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserProviderLinkSuccessResponse}
     */
  }, {
    key: "saveUserProviderLink",
    value: function saveUserProviderLink(opts) {
      return this.saveUserProviderLinkWithHttpInfo(opts).then(function (response_and_data) {
        return response_and_data;
      });
    }
  }]);
  return MeetingsApi;
}();
exports["default"] = MeetingsApi;